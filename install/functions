#!/bin/bash 

# This file is part of Centreon-Discovery module.
#
# Centreon-Discovery is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses>.
#
# Module name: Centreon-Discovery
#
# First developpement by: Jean Marc Grisard - Christophe Coraboeuf
# Adaptation for Centreon 2.0 by: Merethis team
# Inspired from Watt's script.
#
# Modified by: Sub2.13
#
# WEBSITE: http://community.centreon.com/projects/centreon-discovery
# SVN: http://svn.modules.centreon.com/centreon-discovery

#---------------------#
# Used by install.sh  #
#---------------------#

## load all functions used in this script
. $INSTALL_DIR/variables
. $INSTALL_DIR/display_functions

######### FOR BINARIES #########

#----
## define a specific variables for grep,cat,sed,... binaries
## This functions was been use in first line on your script
## @return 0	All is't ok
## @return 1	problem with one variable
## @Globals	GREP, CAT, SED, CHMOD, CHOWN, PYTHON, NMAP, GCC
#----
function define_specific_binary_vars() {
    local vars_bin="GREP CAT SED CHMOD CHOWN PYTHON NMAP GCC DPKG YUM"
    local var_bin_tolower=""
    for var_bin in $vars_bin ; 
    do
	if [ -z $(eval echo \$$var_bin) ] ; then
	    var_bin_tolower="$(echo $var_bin | tr [:upper:] [:lower:])"
	    pathfind_ret "$var_bin_tolower" "$(echo -n $var_bin)"
	    if [ "$?" -eq 0 ] ; then
		eval "$var_bin='$(eval echo \$$var_bin)/$var_bin_tolower'"
		export $(echo $var_bin)
		log "INFO" "$var_bin=$(eval echo \$$var_bin)"
	    else
		eval "$var_bin=$var_bin_tolower"
		export $(echo $var_bin)
#		    return 1
	    fi
	fi
    done
    return 0
}

#----
## find in $PATH if binary exist
## @param	file to test
## @return 0	found
## @return 1	not found
## @Globals	PATH
#----
function pathfind() {
    OLDIFS="$IFS"
    IFS=:
    for p in $PATH; do
	if [ -x "$p/$*" ]; then
	    IFS="$OLDIFS"
	    return 0
	fi
    done
    IFS="$OLDIFS"
    return 1
}

#----
## find in $PATH if binary exist and return dirname
## @param	file to test
## @param	global variable to set a result
## @return 0	found
## @return 1	not found
## @Globals	PATH
#----
function pathfind_ret() {
    local bin=$1
    local var_ref=$2
    local OLDIFS="$IFS"
    IFS=:
    for p in $PATH; do
	if [ -x "$p/$bin" ]; then
	    IFS="$OLDIFS"
	    eval $var_ref=$p
	    return 0
	fi
    done
    IFS="$OLDIFS"
    return 1
}

######### GET_XXXXXX #########

#---
## {Get Centreon install dir and user/group for apache}
#----
function get_centreon_parameters() {
    INSTALL_DIR_CENTREON=`${CAT} $CENTREON_CONF/$FILE_CONF | ${GREP} "INSTALL_DIR_CENTREON" | cut -d '=' -f2`;
    WEB_USER=`${CAT} $CENTREON_CONF/$FILE_CONF | ${GREP} "WEB_USER" | cut -d '=' -f2`;
    WEB_GROUP=`${CAT} $CENTREON_CONF/$FILE_CONF | ${GREP} "WEB_GROUP" | cut -d '=' -f2`;
    NAGIOS_PLUGIN=`${CAT} $CENTREON_CONF/$FILE_CONF | ${GREP} "NAGIOS_PLUGIN" | cut -d '=' -f2`;
    NAGIOS_USER=`${CAT} $CENTREON_CONF/$FILE_CONF | ${GREP} "NAGIOS_USER" | cut -d '=' -f2`;
    NAGIOS_GROUP=`${CAT} $CENTREON_CONF/$FILE_CONF | ${GREP} "NAGIOS_GROUP" | cut -d '=' -f2`;
    DB_NAME_CENTREON=`${CAT} $CENTREON_CONF/$FILE_CONF_CENT | grep "\$conf_centreon\['db'\]" | cut -d '=' -f2 | ${SED} -e s/\"//g -e s/\ //g -e s/\;//g`
    INIT_D=`${CAT} $CENTREON_CONF/$FILE_CONF_CENTPLUGIN | grep "INIT_D" | cut -d '=' -f2`
    
    if [ "$INSTALL_DIR_CENTREON" != "" ] && [ "$WEB_USER" != "" ] && [ "$WEB_GROUP" != "" ] && [ "$NAGIOS_PLUGIN" != "" ] && [ "$NAGIOS_USER" != "" ] && [ "$NAGIOS_GROUP" != "" ] && [ "DB_NAME_CENTREON" != "" ] && [ "$INIT_D" != "" ]; then
	return 0;
    else
	return 1;
    fi
}

#---
## {Get location of instCentWeb.conf file}
##
## @Stdout Error message if user set incorrect directory
## @Stdin Path with must contain $FILE_CONF
#----
function get_centreon_configuration_location() {
    echo ""
    echo "$line"
    echo -e "\tLoad parameters"
    echo "$line"
    err=1
    while [ $err != 0 ]
    do
	echo -e "Please specify the directory with contain \"$FILE_CONF\" [$CENTREON_CONF]"
	echo -n "> "
	read temp_read
	
	if [ -z $temp_read ]; then
	    temp_read=$CENTREON_CONF
                    #echo_failure "The directory does not exist!" "$fail"
	fi
	
	if [ -d $temp_read ] && [ -f $temp_read/$FILE_CONF ] ; then
	    err=0
	    CENTREON_CONF=$temp_read
	else
	    echo_failure "File \"$FILE_CONF\" does not exist in this directory!" "$fail"
	fi
    done
}

#---
## {Get location of instCentWeb.conf file}
##
## @Stdout Error message if user set incorrect directory
## @Stdin Path with must contain $FILE_CONF
#----
function get_agent_install_directory_location() {
    err=1
    while [ $err != 0 ]
    do
	echo -e "Where do you want to install Discovery Agent ? [$AGENT_DIR]"
	echo -n "> "
	read temp_read
	
	if [ -z $temp_read ]; then
	    temp_read=$AGENT_DIR
	    err=0
	fi
	
	if [ -d $temp_read ] ; then
	    yes_no_default "The directory exist. Do you want overwrite it?"
	    if [ "$?" -eq 0 ] ; then
		err=0
		AGENT_DIR=$temp_read
	    else
		err=1
	    fi
	else
	    if [ ${temp_read:0:1} == "/" ] ; then
		err=0
		AGENT_DIR=$temp_read
	    else
		echo "Directory \"$temp_read\" is not valid!"
		err=1
	    fi
	fi
    done
    if [ "$AGENT_DIR" != "" ] ; then
	return 0;
    else
	return 1;
    fi
}

#----
## install modules Python in function $typeInstall (poller, central, both)
##
## @return 0 if all install is ok
## @return 1 if any install is ko
## @Stderr Log into $LOG_FILE
#----
function install_modPython() {
    echo ""
    echo "$line"
    echo -e "\tInstall Python modules"
    echo "$line"
    echo -ne "Module PyCrypto ..."
    cd $BASE_DIR/modPython/pycrypto-2.5
    ${PYTHON} setup.py install >> $LOG_FILE 2>&1
    install_ok=$?
    display_return "$install_ok" "Module PyCrypto"
    if [ $install_ok -ne 0 ] ; then
	return 1
    fi
   
    case $typeInstall in
	poller )
	    echo -ne "Module NMAP ..."
	    cd $BASE_DIR/modPython/python-nmap-0.1.4
	    ${PYTHON} setup.py install >> $LOG_FILE 2>&1
	    install_ok=$?
	    display_return "$install_ok" "Module NMAP"
	    return $install_ok
	    ;;
	central ) 
	    echo -n "Module SetupTools ..."
	    cd $BASE_DIR/modPython/setuptools-0.6c11
	    ${PYTHON} setup.py install >> $LOG_FILE 2>&1
	    install_ok_1=$?
            display_return "$install_ok_1" "Module SetupTools"
	    echo -n "Module MySQLdb ..."
	    cd $BASE_DIR/modPython/MySQL-python-1.2.3
	    ${PYTHON} setup.py install >> $LOG_FILE 2>&1
	    install_ok_2=$?
	    display_return "$install_ok_2" "Module MySQLdb"
	    return $(($install_ok_1+$install_ok_2))
	    ;;
	both ) 
	    echo -ne "Module NMAP ..."
            cd $BASE_DIR/modPython/python-nmap-0.1.4
	    ${PYTHON} setup.py install >> $LOG_FILE 2>&1
	    install_ok_1=$?
	    display_return "$install_ok_1" "Module NMAP"
            echo -ne "Module SetupTools ..."
	    cd $BASE_DIR/modPython/setuptools-0.6c11
	    ${PYTHON} setup.py install >> $LOG_FILE 2>&1
	    install_ok_2=$?
	    display_return "$install_ok_2" "Module SetupTools"
	    echo -ne "Module MySQLdb ..."
            cd $BASE_DIR/modPython/MySQL-python-1.2.3
	    ${PYTHON} setup.py install >> $LOG_FILE 2>&1
	    install_ok_3=$?
	    display_return "$install_ok_3" "Module MySQLdb"
	    return $(($install_ok_1+$install_ok_2+$install_ok_3))
	    ;;
	* )
	    ;;
    esac
}

######### INSTALL_XXXXXX #########

#----
## (Install security on agent)
##
## @param         
## @return 0      install security ok
## @return 1      install security fail
#----

install_security_agent() {
   local key=""
   local key2="."
   yes_no_default "Do you want to secure exchanges between agents?"
   if [ "$?" -eq 0 ] ; then
       while [ "$key" != "$key2" ]
       do
	   echo -e "\nPlease specify the shared secret key []"
	   echo -n "> "
	   read -s key
	   echo -e "\nConfirm the shared secret key []"
	   echo -n "> "
	   read -s key2
	   echo -e "\n"
	   if [ "$key" != "$key2" ] ; then
	       echo -e "Sorry, keys do not match !"
	   fi
       done
       key=`echo -n "$key" | md5sum | awk '{print $1}'`
       echo -n "Configuring secret key for "
       case $typeInstall in
	   poller )
	       echo -n "poller agent"
	       FILE="DiscoveryAgent_poller.py"
	       $SED -i -e 's|@KEY@|'"$key"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1	
	       display_return "$?" "Configuring secret key for DiscoveryAgent_poller.py"
	       ;;
	   central )
	       echo -n "central agent"
	       FILE="DiscoveryAgent_central.py"
	       $SED -i -e 's|@KEY@|'"$key"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1	
	       display_return "$?" "Configuring secret key for DiscoveryAgent_central.py"
	       ;;
	   both )
	       echo -n "poller and central agents"
	       FILE="DiscoveryAgent_poller.py"
	       $SED -i -e 's|@KEY@|'"$key"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1	
	       FILE="DiscoveryAgent_central.py"
	       $SED -i -e 's|@KEY@|'"$key"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1	
	       display_return "$?" "Configuring secret key for DiscoveryAgent_central.py"
	       ;;
	   * )
	       ;;
       esac
       return 0
   else
       key=""
       case $typeInstall in
	   poller )
	       FILE="DiscoveryAgent_poller.py"
	       $SED -i -e 's|@KEY@|'"$key"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1	
	       ;;
	   central )
	       FILE="DiscoveryAgent_central.py"
	       $SED -i -e 's|@KEY@|'"$key"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1	
	       ;;
	   both )
	       FILE="DiscoveryAgent_poller.py"
	       $SED -i -e 's|@KEY@|'"$key"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1	
	       FILE="DiscoveryAgent_central.py"
	       $SED -i -e 's|@KEY@|'"$key"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1	
	       ;;
	   * )
	       ;;
       esac
       return 1
   fi
}


#----
## (Install init script on distrib)
##
## use this fonction to install a init script on your system
##    debian    update-rc.d
##    redhat    chkconfig
##    Suse      chkconfig
##    FreeBSD   add ${service}_enable=YES in /etc/rc.conf
##
## @param         name of service
## @return 0      install service ok
## @return 1      install service fail
#----
function install_init_service() {
    local service=$1
    if [ "$distrib" = "DEBIAN" ] || [ "$distrib" = "UBUNTU" ]; then
        update-rc.d $service start 99 2 3 4 5 . stop 30 0 1 6 . >> $LOG_FILE 2>&1
    elif [ "$distrib" = "SUSE" ] ; then
        chkconfig --add $service  >> $LOG_FILE 2>&1
    elif [ "$distrib" = "REDHAT"  ] || [ "$distrib" = "CENTOS" ]; then
# Just for CentOS :p bug #1148
      	if [ -x /sbin/chkconfig ] ; then
      	    /sbin/chkconfig --add $service >> $LOG_FILE 2>&1
      	else
            chkconfig --add $service >> $LOG_FILE 2>&1
      	fi
    elif [ "$distrib" = "FREEBSD" ] ; then
        echo_info "You must configure your /etc/rc.conf with": ${service}
    else
	echo_faillure "Impossible to install your run level for " ${service} "$fail"
        return 1
    fi
    return 0
}

#---
## {Install Init Discovery-agent}
##
## @Stdout Actions realised by function
## @Stderr Log into $LOG_FILE
#----
function install_init_discovery-agent() {
    yes_no_default "Do you want to install discovery-agent run level ?" $yes
    if [ "$?" -eq 0 ] ; then
	copy_init_discovery-agent;
	echo -n "Creating init links"
	install_init_service $SCRIPT_AGENT_INIT
	display_return "$?" "Creating init links"
	return 0
    else
	echo "Don't forget to execute poller agent after each reboot/start machine :"
	echo -e "\t$INIT_D/$SCRIPT_AGENT_INIT start"
	return 1
    
    fi
}
	
#---
## {Install Discovery Module}
##
## @Stdout Actions realised by function
## @Stderr Log into $LOG_FILE
#----
function install_module() {
    echo ""
    echo "$line"
    echo -e "\tInstall Discovery Module"
    echo "$line"
    
    echo -n "Creating temp install directory"
    TEMP_D="/tmp/Install_module"
    /bin/mkdir -p $TEMP_D >> $LOG_FILE 2>&1
    display_return "$?" "Creating temp install directory"
    /bin/cp -Rf $BASE_DIR/www/modules/Discovery/* $TEMP_D/ >> $LOG_FILE 2>&1
    /bin/rm -Rf $TEMP_D/install $TEMP_D/*.log >> $LOG_FILE 2>&1
    
    echo -n "Setting rights"
    ${CHMOD} -R 755 $TEMP_D/* >> $LOG_FILE 2>&1
    display_return "$?" "Setting rights"
    
    echo -n "Setting owner/group"
    ${CHOWN} -R $WEB_USER.$WEB_GROUP $TEMP_D/* >> $LOG_FILE 2>&1
    display_return "$?" "Setting owner/group"
    
    echo "Changing macro"
    FILE="include/update.php"
    echo -ne "\tfor update.php"
    $SED -i -e 's|@CENTREON_ETC@|'"$CENTREON_CONF"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1
    $SED -i -e 's|@AGENT_DIR@|'"$AGENT_DIR"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1
    display_return "$?" "Changing macro for update.php"
    FILE="include/verif_discovery_status.php"
    echo -ne "\tfor verif_discovery_status.php"
    $SED -i -e 's|@CENTREON_ETC@|'"$CENTREON_CONF"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1
    display_return "$?" "Changing macro for verif_discovery_status.php"
    FILE="include/ips.php"
    echo -ne "\tfor ips.php"
    $SED -i -e 's|@AGENT_DIR@|'"$AGENT_DIR"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1
    display_return "$?" "Changing macro for ips.php"
    FILE="include/results.php"
    echo -ne "\tfor results.php"
    $SED -i -e 's|@AGENT_DIR@|'"$AGENT_DIR"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1
    display_return "$?" "Changing macro for results.php"
    echo -ne "\tfor refresh_result.php"
    FILE="include/refresh_result.php"
    $SED -i -e 's|@CENTREON_ETC@|'"$CENTREON_CONF"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1
    display_return "$?" "Changing macro for refresh_result.php"
    FILE="sql/install.sql"
    echo -ne "\tfor install.sql"
    $SED -i -e 's|@DB_NAME_CENTREON@|'"$DB_NAME_CENTREON"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1
    display_return "$?" "Changing macro for install.sql"
    FILE="sql/uninstall.sql"
    echo -ne "\tfor uninstall.sql"
    $SED -i -e 's|@DB_NAME_CENTREON@|'"$DB_NAME_CENTREON"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1
    display_return "$?" "Changing macro for uninstall.sql"
    
    INSTALL_DIR_MODULE=$INSTALL_DIR_CENTREON/$MODULE_DIR
    
    if [ -d $INSTALL_DIR_MODULE ] ; then
	if [ -d  $INSTALL_DIR_CENTREON/$BACKUP ] ; then
	    echo -n "Delete old Discovery backup"
	    /bin/rm -Rf $INSTALL_DIR_CENTREON/$BACKUP/* >> $LOG_FILE 2>&1
	    display_return "$?" "Delete old Discovery backup"
	else
	    echo -n "Create a directory to backup old files"
	    /bin/mkdir $INSTALL_DIR_CENTREON/$BACKUP >> $LOG_FILE 2>&1
	    display_return "$?" "Create a directory to backup old files"
	fi
	echo -n "Backup old installation"
	mv $INSTALL_DIR_MODULE/* $INSTALL_DIR_CENTREON/$BACKUP >> $LOG_FILE 2>&1
	display_return "$?" "Backup old installation"
    fi
    
    if [ ! -d $INSTALL_DIR_MODULE ] ; then
	echo -n "Create module directory"
	/bin/mkdir $INSTALL_DIR_MODULE >> $LOG_FILE 2>&1
	display_return "$?" "Create module directory"
	echo -n "Change owner on module directory"
	${CHOWN} -R $WEB_USER.$WEB_GROUP $INSTALL_DIR_MODULE >> $LOG_FILE 2>&1
	display_return "$?" "Change owner on module directory"
	echo -n "Change rights on module directory"
	${CHMOD} -R 755 $INSTALL_DIR_MODULE >> $LOG_FILE 2>&1
	display_return "$?" "Change rights on module directory"
	fi
    
    echo -n "Copying module"
    /bin/cp -Rf --preserve $TEMP_D/* $INSTALL_DIR_CENTREON/$MODULE_DIR >> $LOG_FILE 2>&1
    display_return "$?" "Copying module"
    
    echo -n "Delete temp install directory"
    /bin/rm -Rf $TEMP_D $TEMP >> $LOG_FILE 2>&1
    display_return "$?" "Delete temp install directory"
    
    echo_success "\nThe $LOG_VERSION is finished" "$ok"
    echo -e  "See README and the log file for more details."
}

#----
## {Install Discovery Agent}
##
## @Stdout Actions realised by function
## @Stderr Log into $LOG_FILE
#----
function install_agent() {
    echo ""
    echo "$line"
    echo -e "\tInstall Discovery Agent"
    echo "$line"

    echo -n "Creating temp install directory"
    TEMP_D="/tmp/Install_agent"
    /bin/mkdir -p $TEMP_D >> $LOG_FILE 2>&1
    display_return "$?" "Creating temp install directory"
    /bin/cp -Rf $BASE_DIR/agents/* $TEMP_D/ >> $LOG_FILE 2>&1
  
    get_agent_install_directory_location;
    
    install_security_agent;

    echo -n "Setting rights"
    ${CHMOD} -R 755 $TEMP_D/* >> $LOG_FILE 2>&1
    display_return "$?" "Setting rights"
    
    echo -n "Setting owner/group"
    ${CHOWN} -R root:root $TEMP_D/* >> $LOG_FILE 2>&1
    display_return "$?" "Setting owner/group"
	
    if [ "$?" -eq 0 ] ; then
	if [ ! -d $AGENT_DIR ] ; then
	    echo -n "Creating the directory $AGENT_DIR"
	    /bin/mkdir -p $AGENT_DIR >> $LOG_FILE 2>&1
	    display_return "$?" "Creating the directory $AGENT_DIR"
	fi
        echo -ne "Changing macro for DiscoveryAgent_central.py"
        FILE="DiscoveryAgent_central.py"
        $SED -i -e 's|@CENTREON_ETC@|'"$CENTREON_CONF"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1
        $SED -i -e 's|@AGENT_DIR@|'"$AGENT_DIR"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1
        display_return "$?" "Changing macros for DiscoveryAgent_central.py"
        echo -ne "Changing macro for DiscoveryAgent_poller.py"
        FILE="DiscoveryAgent_poller.py"
        $SED -i -e 's|@AGENT_DIR@|'"$AGENT_DIR"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1
        display_return "$?" "Changing macro for DiscoveryAgent_poller.py"
	
	echo -ne "Creating the log directory"
	/bin/mkdir -p $AGENT_DIR/log >> $LOG_FILE 2>&1
	display_return "$?" "Creating the log directory ($AGENT_DIR/log)"
	echo -ne "Setting owner/rights on log directory"
	${CHOWN} -R $WEB_USER:$WEB_GROUP $AGENT_DIR/log >> $LOG_FILE 2>&1
	${CHMOD} -R 755 $AGENT_DIR/log >> $LOG_FILE 2>&1
	display_return "$?" "Setting rights"

	echo -n "Copy Discovery "
	case $typeInstall in
	    poller )
		echo -n "poller agent"
	     	/bin/cp -Rf --preserve $TEMP_D/DiscoveryAgent_poller.py $AGENT_DIR >> $LOG_FILE 2>&1
		display_return "$?" "Copy Discovery poller agent"
		install_init_discovery-agent;
		execute_discovery-agent;
		;;
	    central )
		echo -n "central agent"
		/bin/cp -Rf --preserve $TEMP_D/DiscoveryAgent_central.py $AGENT_DIR >> $LOG_FILE 2>&1
		display_return "$?" "Copy Discovery central agent"
		;;
	    both )
		echo -n "poller and central agents"
		/bin/cp -Rf --preserve $TEMP_D/*.py $AGENT_DIR >> $LOG_FILE 2>&1
		display_return "$?" "Copy Discovery poller and central agents"
		install_init_discovery-agent;
		execute_discovery-agent;
		;;
	    * )
		;;
	esac

	

	echo -n "Delete temp install directory"
	/bin/rm -Rf $TEMP_D $TEMP >> $LOG_FILE 2>&1
	display_return "$?" "Delete temp install directory"
	return 0
    else
	echo -n "Delete temp install directory"
	/bin/rm -Rf $TEMP_D $TEMP >> $LOG_FILE 2>&1
	display_return "$?" "Delete temp install directory"
	return 1
    fi
}


######### OTHERS #########
    
#----
## (Execute discovery agent poller)
##
## execute $INIT_D/discovery-agent.sh
## @return 0      starting ok
## @return 1      starting ko
#----
function execute_discovery-agent() {
    yes_no_default "Do you want execute discovery poller agent now ?" $yes
    if [ "$?" -eq 0 ] ; then
        echo -ne "Starting discovery agent"
	$INIT_D/$SCRIPT_AGENT_INIT start >> $LOG_FILE 2>&1
	display_return "$?" "Starting discovery agent"
	return 0
    else
	echo "Don't forget to execute poller agent at installation end :"
        echo -e "\t$INIT_D/$SCRIPT_AGENT_INIT start"
	return 1
    fi
}
#----
## (Define OS)
##
## define your distribution from lsb_release command
##    Debian
##    Suse
##    Redhat
##    FreeBSD
##
## @return 0      OS found
## @return 1      OS not found
#----
function find_OS() {
    local system=""
    local lsb_release=""
    system="$(uname -s)"
    if [ "$system" = "Linux" ] ; then
        if [ "$(pathfind lsb_release; echo $?)" -eq "0" ] ; then
            lsb_release="$(lsb_release -i -s)"
        else
            lsb_release="NOT_FOUND"
        fi
        if [ "$lsb_release" = "Debian" ] || [ -e "/etc/debian_version" ] ; then 
            distrib="DEBIAN"
            log "INFO" "$(gettext "GNU/Linux Debian Distribution")"
	elif [ "$lsb_release" = "Ubuntu" ] ; then
	    distrib="UBUNTU"
            log "INFO" "$(gettext "GNU/Linux Ubuntu Distribution")"
	elif [ "$lsb_release" = "CentOS" ] ; then
            distrib="CENTOS"
            log "INFO" "$(gettext "GNU/Linux CentOS Distribution")"
        elif [ "$lsb_release" = "RedHatEnterpriseES" ] || [ -e "/etc/redhat-release" ] ; then
            distrib="REDHAT"
            log "INFO" "$(gettext "GNU/Linux Redhat Distribution")"
	elif [ "$lsb_release" = "Fedora" ] ; then
	    distrib="FEDORA"
            log "INFO" "$(gettext "GNU/Linux Fedora Distribution")"
        else
            distrib="NOT_FOUND"
            log "INFO" "$(gettext "GNU/Linux distribution not found")"
            return 1
        fi
    elif [ "$system" = "FreeBSD" ] ; then
        distrib="FREEBSD"
        log "INFO" "$(gettext "FreeBSD System")"
    elif [ "$system" = "AIX" ] ; then
        distrib="AIX"
        log "INFO" "$(gettext "AIX System")"
    elif [ "$system" = "SunOS" ] ; then
        distrib="SUNOS"
        log "INFO" "$(gettext "SunOS System")"
    else
        distrib="NOT_FOUND"
        log "INFO" "$(gettext "System not found")"
    fi
    return 0
}

#---
## (Check package)
##
## @param1        package to test
## @return 0      packages found
## @return 1      packages not found
#---
function check_package() {
    if [ "$distrib" == "DEBIAN" ] || [ "$distrib" == "UBUNTU" ] ; then
	return `${DPKG} -l | grep $1 | wc -l`
    elif [ "$distrib" == "REDHAT" ] || [ "$distrib" == "CENTOS" ] ; then
	return `${YUM} list installed | grep $1 | wc -l`
    fi
}

#----
## (Copy start/stop script in the /etc/init.d directory)
##
## @return 0      copy script ok
## @return 1      copy script fail || don't overwrite
#----
function copy_init_discovery-agent() {
    ${CHOWN} root:root $TEMP_D/$SCRIPT_AGENT_INIT >> $LOG_FILE 2>&1
    ${CHMOD} 755 $TEMP_D/$SCRIPT_AGENT_INIT >> $LOG_FILE 2>&1
    echo -n "Changing macro for init script"
    FILE="$SCRIPT_AGENT_INIT"
    $SED -i -e 's|@AGENT_DIR@|'"$AGENT_DIR"'|g' $TEMP_D/$FILE >> $LOG_FILE 2>&1
    display_return "$?" "Changing macro for init script"
    
    if [ -f $INIT_D/$SCRIPT_AGENT_INIT ] ; then
	yes_no_default "The script exists. Do you want overwrite it?"
        if [ "$?" -eq 1 ] ; then
	    return 1
        fi
    fi
    echo -n "Copying init script"
    cp $TEMP_D/$SCRIPT_AGENT_INIT $INIT_D >> $LOG_FILE 2>&1
    display_return "$?" "Copying init script"
    return $?
}
